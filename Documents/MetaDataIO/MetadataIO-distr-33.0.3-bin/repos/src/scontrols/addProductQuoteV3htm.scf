<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html><head><title>Product Selection</title>
<link  href="/dCSS/Theme2/default/common.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
<link  href="/dCSS/Theme2/default/custom.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
<link  href="/css/assistive.css" type="text/css" media="aural,braille,embossed" rel="stylesheet" >
<script src="http://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js" type="text/javascript"></script>

<script type="text/javascript" src="/js/functions.js"></script>
<script language="javascript" type="text/javascript"> 
/* v2.21.06 multicurrency support
 * v3.3 make sure currency is set on quote to match opp
 * v3.4 support very large pricebooks
 */
var priorQuoteAmount = 0;
var edit_sales_price = false;
var sapp = new Sforce.Application();
var maxProdsPerPage = 50; // set me up to 200, above that we would need querymore TODO
//maxProdsPerPage = 5; // TEST and DEBUG
var retUrl = "/{!SFDC_520_Quote__c.Id}";
var opid = "{!SFDC_520_Quote__c.OpportunityId__c}";
var newsort = [1,2,3,4,5];
var npages = false; var Query; 
var PriceBook;  var Products; var sortindex = 1; var Opportunity; var Quote;
var has_multicurrency = true;
var Currency = null; // the current quote and opp currency to use
var Page = 0; // which page are we on in a multi page list
var newpgMsg = "Your selections on this page will be lost. Do you want to continue?";
function jumpbackQuote() { jumpback("/{!SFDC_520_Quote__c.Id}") }
function jumpbackOpp() { jumpback("/{!SFDC_520_Quote__c.OpportunityId__c}"); }
function jumpback(retUrl) { 	window.parent.parent.location.href = retUrl; } 
function get_opp() { 
	var fields = " id,Name, Pricebook2Id ";
	if ( has_multicurrency) { fields += ", CurrencyIsoCode "; }
	var oppRes = sforceClient.Query(
		"select "+fields+" from opportunity where id = '{!SFDC_520_Quote__c.OpportunityId__c}'");
	if ( oppRes.size < 1 || oppRes.className != 'QueryResult') { 
		alert ( 'no opportunity found?' ) ;
		jumpbackQuote(); 
		return; 
	}
	// currency must come from the opportunity
	if ( has_multicurrency) { Currency = oppRes.records[0].get("CurrencyIsoCode");}
	return  oppRes.records[0];
}
function get_quote() { 
	var fields = "  id, Quote_Amount__c ";
	// the quote currency will determine what product line items may be added
	if ( has_multicurrency) { fields += ", CurrencyIsoCode "; } // the quote currency 
	try { 
	var qr = sforceClient.Query(
		"select " + fields + " from SFDC_520_Quote__c where id = '{!SFDC_520_Quote__c.Id}'");
	if ( qr.size < 1 || qr.className != 'QueryResult') { 
		alert ( 'no quote found?' +qr.toString()) ;
		jumpbackQuote(); 
		return;
	}
	priorQuoteAmount = qr.records[0].get("Quote_Amount__c");
	priorQuoteAmount = priorQuoteAmount?priorQuoteAmount:'0';
	
	return  qr.records[0];
	
	} catch (e) { 
		alert(e+qr.toString()) 
	}
} 
function initPage() {
	sforceClient.useCookies = true;
	//sforceClient.registerInitCallback(setup);
	sforceClient.init("{!API.Session_ID}", "{!API.Partner_Server_URL_70}", true); 
	setTimeout("setup()",50);
}
function setup_multicurrency() { // see if we have > 1 currency
	var qr = sforceClient.Query("select id, ConversionRate,IsActive,IsCorporate,IsoCode from CurrencyType where IsCorporate = true ") ; 
	if (qr.className == 'Fault') { 
		if (/INVALID_TYPE/.test(qr.faultcode) ) { return false; }
	}
	return true;
} 
// main setup entry point
function setup() { 
	has_multicurrency = setup_multicurrency(); // see if this org has multiple currencies turned on
	Opportunity = get_opp(); 
	mention_quote(); 
	// the opp must have a price book assigned, get user to pick or use the "active one"
	if ( ! Opportunity.get("Pricebook2Id") ) { 
		alert("please select a price book for this opportunity"); 
		
		jumpback ("/oppitm/choosepricebook.jsp?sUrl=%2F{!SFDC_520_Quote__c.Id}"+
			"&retURL=%2F{!SFDC_520_Quote__c.Id}&id="  +opid );
		return; // they will have to select a price book and hit this link again
	} 
	query_pricebookentries("");  //main drawing routine
	
	// name droping
	sforceClient.Query("select name from Pricebook2 where id = '"+Opportunity.get("Pricebook2Id")+"'",
		namePriceBook); 
}

// list the produts, applying the where clause
function query_pricebookentries(where) { 
	drawMsg(null,"Generating Products list, please wait...");
	var fields = " Id,Product2Id,UnitPrice,ProductCode ";
	var soql ;
	if ( has_multicurrency) {  
		soql = "select "+fields+", CurrencyIsoCode from PricebookEntry where IsActive = true and "+
			" Pricebook2Id = '" + Opportunity.get("Pricebook2Id")  + 
			"' and CurrencyIsoCode = '" + Opportunity.get("CurrencyIsoCode") + "'";
	} else { 
		soql = "select "+fields+" from PricebookEntry where IsActive = true and "+
			" Pricebook2Id = '" + Opportunity.get("Pricebook2Id")  + "' " ;
	}
	soql += where;  //	alert('soql: '+soql)
	sforceClient.Query(soql,gotPriceBooks);
}

function gotPriceBooks ( qr) { 
	Query = qr;
	if (qr.className == 'Fault' ) { alert('fault: '+qr.toString());	jumpback(); }
	if ( qr.size < 1 ) { 
		var msg = "no active products found in the current price book ";
		if ( has_multicurrency) {  
			msg += " for currency " + Opportunity.get("CurrencyIsoCode");
		}
		drawMsg(null, msg );
	}
	
	// check for > max page size
	if (qr.size >  qr.records.length ) { npages = true;
		document.getElementById('manyproducts').innerHTML = 
			"<span style=\"color:red;\">Currently showing " + qr.records.length + 
			" products out of " + Query.size + " total matching products" + 
			"<br>Please use above filter to locate specific products within this price book</span>" ;
	} else { // clear this msg
		document.getElementById('manyproducts').innerHTML = "Matching Products :"+Query.size;	
	} 
	
	PriceBook = qr.records; // up to 200 random records in a large pricebook
	
	// retrieve the products info here
	var Productsids = []; for (k in PriceBook) { 
		Productsids.push(PriceBook[k].get("Product2Id")) ;
	}
	// this (list of p2 ids) limits the Products to the ones in our active price book
	var pfields = "name,description,Family,isactive,productcode";
	if ( has_multicurrency) { pfields += ", CurrencyIsoCode "; }
	
	// todo var where = " where Description like '%band%' ";

	sforceClient.retrieve(pfields,"Product2",Productsids, gotProducts);
} 

function 	gotProducts( ap) { Products = ap; 
	if ( Products.length < 1) { drawMsg(null,"No matching products found... "); 
	} else { sortAndDraw(sortindex); } 
	document.body.style.cursor="default"; // done waiting
} 

function findProduct() {  
	if (! verifyCheckedWarning(document.forms['dispatch'], 'ids', newpgMsg) ) { return false; }
	
/* this is going to re-query the entire pricebook 
// returning products that match text in the keyword or filter
*/
	var where = '';
	var addP = document.getElementById('addPSearch').value;
	if (addP.length > 1) { 
		where = " and ( Name like '%"+addP+"%' or ProductCode  like '%"+addP+"%' ) ";
		// todo what if filter by product code ?
	}
	
	clear_table();
	// look at the filters also
	where = match_filters_w(where);
	
	document.body.style.cursor="wait"; // waiting
	query_pricebookentries(where); // queries and draws the Products list
}
function sortAndDraw(colnum) { 
	if (! verifyCheckedWarning(document.forms['dispatch'], 'ids', newpgMsg )) { return false; }
	//alert('here' + colnum)
	
	clear_table();
	sortindex =colnum; Products.sort(sortBy);
	Page = 0; // sorting resets the pageing counter
	draw_prods(Products);
	
	return true;
} 
function draw_prods(Products) { // assumes Products is sorted as needed
	var tbody = document.getElementById("list_tbody");
	// needs to draw header
	drawHeader(tbody);
	
	next_prev(); // put up the next prev page marker if needed
	
	// if Page is > 0 show the second or third page
	var i = 0; var page_end = maxProdsPerPage-1;
	if(Page>0) { i = Page*maxProdsPerPage ; page_end = i + page_end; } 
	for (  ; i < Products.length; i++) { 
		if (i > page_end) {break;} // max that we draw on this page
		
		var Prod = Products[i]; var id = Prod.get("Id");
		
		var tr = makeRow( makeAttrs(i,tbody) );	
		tr.sobject = Prod;
		tbody.appendChild(tr);// insert this row in the table
		
		createTag(tr,"td",{'class':'actionColumn'}).innerHTML = 
			"<input type=\"checkbox\" name=\"ids\" value=\"" + id + "\" id=\"ids\" >&nbsp;";
		// had to add target = blank to get a new window or else we end up with 
		// a product page with a tab row inside this iframe
		createTag(tr,"th",{"scope":"row"}).innerHTML = 
			"<a target=_blank href=\"/"+id+"\">"+Prod.get("Name")+"</a>";
		createTag(tr,"td", []).innerHTML = 
			"<a target=_blank href=\"/"+id+"\">"+Prod.get("productcode")+"</a>";
		
		var lp = grep("Product2Id",Prod.get("Id"), PriceBook )
		var up = lp.get("UnitPrice"); up = (up?up:"0");// aka List Price in the price books
		var lp_display = "$"+up; // todo use locale symbol instead of $
		if ( has_multicurrency) { lp_display = lp.get("CurrencyIsoCode") + " " + up; }
		createTag(tr,"td",{"class":"CurrencyElement"}).innerHTML = lp_display; 
		
		var de = Prod.get("Description"); de = de?de:'&nbsp;';
		var fa = Prod.get("Family"); fa = fa?fa:'&nbsp;';
		createTag(tr,"th",[]).innerHTML = de
		createTag(tr,"td",[]).innerHTML = fa
	}

}
function newsortindex(idx) { if (idx>0) { return -(idx)} else { return Math.abs(idx); } }
function namePriceBook(PBqr) { 
	document.getElementById('pbname').innerHTML = PBqr.records[0].get("Name");
}
function drawHeader(ta) { 
	var tr = makeRow({'class':'headerRow'});ta.appendChild(tr);
	
	createTag(tr,"th",{'class':'actionColumn','scope':'col'}).innerHTML = 
	 "<input value=\"\" title=\"Toggle All Rows\" " + 
 	 " onclick=\"javascript:SelectAllOrNoneByCheckbox(document.forms['dispatch'],'ids', this);\"" + 
 	 " id=\"\" name=\"\" type=\"checkbox\">&nbsp;";
	
	newsort[Math.abs(sortindex)-1] = newsortindex(sortindex);
	var arrow = ['','','','',''];
	var asc_arrow = "<img src=\"/img/sort_asc_arrow_grn.gif\" alt=\"Sort Ascending\" title=\"Sort Ascending\" align=\"texttop\" height=\"14\" width=\"21\">";
	var desc_arrow = "<img src=\"/img/sort_desc_arrow_grn.gif\" alt=\"Sort Decending\" title=\"Sort Decending\" align=\"texttop\" height=\"14\" width=\"21\">";
	arrow[Math.abs(sortindex)-1] = (sortindex>0 ? asc_arrow : desc_arrow);
	
	if (Math.abs(sortindex)==1) { } 
	createTag(tr,"th",{'scope':'col','valign':'top'}).innerHTML = 
		"<a href=\"#\" title=\"\" onclick=\"return sortAndDraw("+newsort[0]+")\">Product Name"+arrow[0]+
		"</a>";
	
	createTag(tr,"th",{'scope':'col'}).innerHTML = 
		"<a href=\"#\" title=\"\" onclick=\"return sortAndDraw("+newsort[1]+")\">Product Code"+arrow[1]+
		"</a>";
		
	createTag(tr,"th",{'scope':'col','class':'CurrencyElement'}).innerHTML = 
		"<a href=\"#\" title=\"\" onclick=\"return sortAndDraw("+newsort[2]+")\">List Price"+arrow[2]+
		"</a>";
			
	createTag(tr,"th",{'scope':'col'}).innerHTML = 
		"<a href=\"#\" title=\"\" onclick=\"return sortAndDraw("+newsort[3]+")\">Product Description"+arrow[3]+
		"</a>";
			
	createTag(tr,"th",{'scope':'col'}).innerHTML = 
		"<a href=\"#\" title=\"\" onclick=\"return sortAndDraw("+newsort[4]+")\">Product Family"+arrow[4]+
		"</a>";
	
}

function matches_keyword(prod) { 
	var addP = document.getElementById('addPSearch').value;
	if (addP.length < 1) { return true; } // ok, no restriction based on keyword
	var r1 = new RegExp(addP,"i"); // look for a match in any of these fields
	if (r1.test(prod.get("Name")) ||
		r1.test(prod.get("Description")) ||
		r1.test(prod.get("Family")) ||
		r1.test(prod.get("ProductCode"))  ) 
	{ 
		return true; 
	}
	return false; // no match found
}

function match_filters_w(where) { 
	// see if there are any filters also
	// col0 , oper0 , fval0 
	var col0 = document.getElementById('col0').value;
	var oper0 = document.getElementById('oper0').value;
	var fval0 = trim( document.getElementById('fval0').value) ;
	
	if ( col0.length > 0 && oper0.length > 0) { // have a filter
		// alert(" here " + col0 + " " + oper0 + " " + fval0)
		if (col0 == 'unitprice') { 
			switch(oper0) { 
			case 'e': where += " and " + col0 + " = " + fval0 + " "; break;
			case 'n': where += " and " + col0 + " != " + fval0 + " "; break;
			
			case 's': 
			case 'c': 
			case 'z': 
				alert("Cannot use this operator with ListPrice");
				document.getElementById('fval0').value = "";
				document.getElementById('oper0').value = "";
				break; 	
			// todo add less than, greater than
			}
		} else { 
			switch(oper0) { 
			case 'e': where += " and " + col0 + " = '" + fval0 + "' "; break;
			case 'n': where += " and " + col0 + " != '" + fval0 + "' "; break;
			case 's': where += " and " + col0 + " like '" + fval0 +  "%' "; break;
			case 'c': where += " and " + col0 + " like '%" + fval0 + "%' "; break; 	
			case 'z': where += " and " + col0 + " like '%" + fval0 + "' "; break; 	
			}
		}
	} 
	//alert(" where " +where )
	return where;	// pass thru
} 

function fillToday() { // when clicked, we fill all date fields with current date
	var els = document.forms['editPage'].elements;
	for (var i =0;i< els.length; i++) {
		if ( /^ServiceDate/.test(els[i].id) ) els[i].value = "{!Today}"; 
	}
} 
function handleKeyDown_addP(evt) { evt = getEvent(evt);
    if (evt.keyCode == 13 || evt.which == 13) { // Enter key
        findProduct(); return false;
    } return true;
}
</script> <!-- page 1 -->
<script language="javascript" type="text/javascript">
function drawMsg(ta,msg) { 
	if (!ta) ta = document.getElementById("list_tbody");
	clear_table( ta );
	var tr = makeRow({'class':'headerRow'});ta.appendChild(tr);
	createTag(tr,"th",{'class':'actionColumn','scope':'col'}).innerHTML = msg;
}
function drawWait(ta) { drawMsg(null,"Generating Products list, please wait...");
}
function clear_table(tbody) { 
	if (!tbody) tbody = document.getElementById("list_tbody");
	while (tbody.rows.length > 0) 	{ tbody.deleteRow(0); } 
} 

function mention_quote() { 
	var d = document.getElementById('descript');
	d.innerHTML = 
		"Product Selection for: " + Opportunity.get("Name") + " - {!SFDC_520_Quote__c.Name}. " +
		"Enter your keyword and filter criteria and click Find Products to begin your " +
		"search. Search results include all records that match both your keyword "+
		"and filter entry.";
}
function makeAttrs(i,ta) { // form a row attribute array
	var atts = new Object();
	// how many rows in this table so far
	try { ta.even } catch (e) { ta.even = i};
	if (i==0) { // skin stuff
		atts["class"] = "even first";
	} else if (ta.even == true) {
		atts["class"] = "even";
	} else {
		atts["class"] = "odd";
	}
	ta.even = !ta.even;	
	atts["onmouseout"] = "if (typeof(hiOff) != 'undefined' && this.active == false){hiOff(this);}";
	atts["onmouseover"] = "if (typeof(hiOn) != 'undefined'){hiOn(this);}";
//	atts["onclick"] = "checkboxclick(this);"; // can cause problems clicking on text input field
//	atts["class"] = "handy";
	return atts;
}
function makeRow(atts) {
	
	if (sapp.get_type() == Sforce.Application.Type.InternetExplorer) {
		var trTag = "<TR ";
		for (key in atts) {
			trTag += key + "=\"" + atts[key] + "\"";
		}
		trTag += ">";
		var ret = document.createElement(trTag);
	} else {
		var tr = document.createElement("TR");
		for (key in atts) {
			tr.setAttribute(key, atts[key]);
		}
		var ret = tr;
	}
	ret.active = false;
	return ret;
}
function grep(fld,val,ary) { var ret = null;
	for (key in ary) { if (ary[key].get(fld) == val) ret = ary[key]; }
	return ret;
}
function createTag(parent, name, keyvalPairs) {
	var ret; 
	if (sapp.get_type() == Sforce.Application.Type.InternetExplorer) {
		var trTag = "<"+name+" ";
		for (key in keyvalPairs) {
				trTag += key + "=\"" + keyvalPairs[key] + "\"";
		}
		trTag += ">";
		ret = document.createElement(trTag);
	} else { 
		ret = document.createElement(name);
		for (key in keyvalPairs) {
			ret.setAttribute(key, keyvalPairs[key]);
		}
	} 
	//assert(typeof(parent)=='object',"no parent for element");
	parent.appendChild(ret);
	return ret;
}

</script> <!-- utils  -->
<script language="javascript" type="text/javascript">
/* 	page two begins, respond to a "select click 
 	get a list of selected product beans , keeping the price book open to fetch 
 	the default price. 
	TODO, format the currency for multi-currency
*/
var Selected; function doSelect() { 
	var form = document.forms['dispatch'];
	if ( ! verifyChecked(form, 'ids', 'Please select at least one row') ) {return false;}
	
	// now move on to the second page of this wizard
	// passing in an array of sobjects
	Selected =  addQuoteLines(form,'ids');
	doEditLines(Selected ); 
	return true;
}
function addQuoteLines(form,element_name) { // read from the form, build array of sobjects
	var sobjectList = new Array();
	for (i = 0; i < form.elements.length; i++) { 
		if ((form.elements[i].name == element_name) && (form.elements[i].checked)) { 
			var pn = form.elements[i].parentNode;
		//	var qty = pn.lastChild.value;
			var ppn = form.elements[i].parentNode.parentNode;
			if ( ppn.sobject ) { 
			//	ppn.sobject.qty = qty;
				sobjectList.push(ppn.sobject); 
			}
		} 
	} 
	if ( sobjectList.length < 1) { alert('no items selected >'+ sobjectList.length );jumpbackQuote(); }
	return sobjectList;
}
</script> <!-- transition from 1 to 2 -->
<script language="javascript" type="text/javascript"> 
/* 	this section of script tag represents the HTML body of 
 	the second page of the wizard
 	redraw the entire form to allow lines to be edited 
 	should look like the edit product lines form on opps
*/
var quoteCurrTotal; 
function find_value (els,id) { 
	for (var i =0;i< els.length; i++) { if (els[i].id == id) return els[i].value; } 
	alert('find_value could not locate form element by id '+id); return 0;
}
function curTotal() { // do the math with the current prices, qty and discount
	var els = document.forms['editPage'].elements;
	var line_net_ext = []; 
	for (var i =0;i< els.length; i++) {
		// find a qty, get the id from that
		if ( /^Quantity/.test(els[i].id) ) { 
			var pid = els[i].id.replace(/Quantity(\S{15,18})/,'$1');
			//alert(pid); return;
			// find all price and discount for this qty
			var qty = els[i].value;
			var price = find_value(els,'UnitPrice'+pid);
			var discount = find_value(els,'SalesDiscount'+pid);
			line_net_ext.push( ( qty * price ) * (1- (discount / 100)) );
			//alert(line_net_ext[line_net_ext.length-1]);			
		}
	}
	// total the amounts in line_net
	quoteCurrTotal = priorQuoteAmount - 0; // the minus zero casts string to number, just in case
	for (var k in line_net_ext) { quoteCurrTotal += line_net_ext[k]; } ;	
	//alert('total is '+typeof(quoteCurrTotal) + ' ' +quoteCurrTotal);
	
	try {
		var tot = quoteCurrTotal.toFixed(2);
		if ( has_multicurrency && Currency != null ) { tot = Currency + ' ' + tot; } 
		document.getElementById('curTotal').innerHTML = tot;// TODO format for multi-currency
		document.getElementById('curTotal2').innerHTML = tot; // and single currency 
	} catch(e) { //alert(e)
	} // do nothing if these doc elements are missing..
	return true;
}
function doEditLines(sobjects) { 
	// out with the old
	document.getElementById('pagebody').innerHTML= '';
	document.getElementById('descript').innerHTML= "Edit products for this quote.";
	document.getElementById('pdes').innerHTML=  "Quote Product Line Edit";
	var li = document.getElementById('listOpportunity'); li.innerHTML= ''; 
	
	// build the new table
	var form = createTag(li,"form",{'id':'editPage'}); 	
	var ta = createTag(form,"table",{'class':'genericTable'});
	var tb = createTag(ta,"tbody",[]);
	var tr = makeRow([]); tb.appendChild(tr);
	createTag(tr,"td",{'colspan':"5", 'align':"center"} ).innerHTML = 
	  "<input value=\" Save \" class=\"btn\" title=\"Save\" name=\"save\" type=\"button\" onclick=\"return doSave();\">&nbsp; " +
	  "<input value=\"Cancel\" class=\"btn\" title=\"Cancel\" name=\"cancel\" type=\"button\" onclick=\"jumpbackQuote();\">";
	
	var td = createTag(tr,"td",{ 'nowrap':'nowrap'} )
	td.innerHTML = "&nbsp;Quote Amount:&nbsp;"
	createTag(td,"span",{'id':"curTotal",'name':"curTotal",'class':"bodyBold"} );

	tr = makeRow([]); tb.appendChild(tr);
	
	createTag(tr,"td",{'colspan':"100", 'height':"10"} );
	tr = makeRow([]); tb.appendChild(tr);
	
	createTag(tr,"td",{'nowrap':'nowrap'}).innerHTML="Product";
	
	createTag(tr,"td",{'nowrap':'nowrap'}).innerHTML=
		"<span style=\"color: rgb(153, 0, 0);\"><span>Quantity</span></span>";
	
	createTag( 
		createTag(tr,"td",{'nowrap':'nowrap'}), 
			"span", edit_sales_price?{ 'style':'color: rgb(153, 0, 0)'}:[]
			).innerHTML = "List Price";
	
	td = createTag(tr,"td",{'nowrap':'nowrap'});
	createTag(td,"a",{'href':'#','onclick':"fillDiscount()&&curTotal();" }).innerHTML = "Discount";
	td.innerHTML += "&nbsp;<input id=\"newDiscount\" name=\"newDiscount\" type=\"text\" size=\"1\" " + 
		"onchange=\"return numonly(this,'Discount')\">&nbsp;";
	td.innerHTML += "<div class=\"errorMsg\"id=\"errDiscount\" name=\"errDiscount\"></div>";


	createTag(tr,"td",{'nowrap':'nowrap'}).innerHTML= 
		"<span>Date</span>&nbsp;<span class=\"dateFormat\">[&nbsp;<a href=\"#\" onclick=\"fillToday();\">{!Today}</a>&nbsp;]</span>";
	
	createTag(tr,"td",{'nowrap':'nowrap'}).innerHTML="<span>Line Description</span></span>";	
	
	//for (i=0;i<2;i++) {createTag(tr,"td",{'nowrap':'nowrap'});} // why?
	
	tr = makeRow([]); tb.appendChild(tr); createTag(tr,"td",{'colspan':'100','bgcolor':"#000000",'height':"1"});

	// start looping adding cells across and rows down
	for (k = 0; k< sobjects.length; k++) { var pid = sobjects[k].get("Id");
		tr = makeRow({'valign':"top"}); tb.appendChild(tr);
		tr.sobject = sobjects[k];
		createTag(tr,"td",{'class':'bodyBold'}).innerHTML = sobjects[k].get("Name");
		td = createTag(tr,"td",{'class':'bodyBold'});
		
		// put in a default of "1" for qty
		var ii=createTag(td,"input", {'id':'Quantity'+pid,'size':'8','type':'text',
			'onchange':"return (numonly(this,'Quantity') && curTotal());",
			'value':'1'}
			);
			 
		createTag(td,"br",[]);// holder for possible errmsg
		ii.er=createTag(td,"span",{'class':'errorMsg','id':'QuantityError'+pid});//.innerHTML = "Error: You must enter a value";
		
		td = createTag(tr,"td",{'class':'bodyBold'});
		var lp = grep("Product2Id",pid, PriceBook );
	//	var jj=createTag(td,"input",{'id':'UnitPrice'+pid,'value':lp.get("UnitPrice"),'size':'10','type':'text','onchange':"return numonly(this)" });
		var uprice = lp.get("UnitPrice"); uprice=uprice?uprice:'0.00';
		var attr = {'id':'UnitPrice'+pid,'value':uprice,'size':'10','type':'text',
			'onchange':"return (numonly(this,'Price') && curTotal());"
			};
		if (!edit_sales_price) {attr['style']='color: rgb(0, 0, 0)'; attr['disabled']=1;}
		var jj=createTag(td,"input",attr);
		createTag(td,"br",[]);
		jj.er=createTag(td,"span",{'class':'errorMsg','id':'UnitPriceError'+pid});//.innerHTML = "Error: You must enter a value";
	
		td = createTag(tr,"td",{'class':'bodyBold','align':'center'});
		createTag(td,"input",{'id':'SalesDiscount'+pid,'size':'1','type':'text',
			'onchange':"return (numonly(this,'Price') && curTotal());" });
		createTag(td,"span",[]).innerHTML="%";

		td = createTag(tr,"td",{'class':'bodyBold'});
		span = createTag(td,"span",{'class':'dateInput'});
		dateinp = createTag(span,"input",{'id':'ServiceDate'+pid, 'size':'10','type':'text'});
		createTag(span,"a",{'href':"javascript:openPopupFocus('/home/calendar.jsp?form=editPage&field=ServiceDate"+pid+"&mo=0', '_blank', 186, 170, 'width=186,height=170,resizable=yes,toolbar=no,status=no,scrollbars=no,menubar=no,directories=no,location=no,dependant=yes', true, true);",
							'class':"datePicker",
							'title':"Pick A Date (New Window)" ,
							'onclick':"setLastMousePosition(event)", 
							'id':"ServiceDate"+pid+"PopCal" 
							}).innerHTML = 
					"<img src=\"/s.gif\" alt=\"Pick A Date (New Window)\" class=\"datePickerIcon\">";
		
		td = createTag(tr,"td",{'class':'bodyBold'});
		createTag(td,"input",{'id':'Description'+pid,'size':'25','type':'text'});			
		//fivecells(tr);
	} 
	// close out the edit list

	tr = makeRow([]); tb.appendChild(tr);
	createTag(tr,"td",{'colspan':"100", 'height':"20"} );
	
	tr = makeRow([]); tb.appendChild(tr);
	createTag(tr,"td",{'colspan':"5", 'align':"center"} ).innerHTML = 
	  "<input value=\" Save \" class=\"btn\" title=\"Save\" name=\"save\" type=\"button\" onclick=\"return doSave();\">&nbsp; " +
	  "<input value=\"Cancel\" class=\"btn\" title=\"Cancel\" name=\"cancel\" type=\"button\" onclick=\"jumpbackQuote();\">";

	var td = createTag(tr,"td",{ 'nowrap':'nowrap'} )
	td.innerHTML = "&nbsp;Quote Amount:&nbsp;";
	createTag(td,"span",{'id':"curTotal2",'name':"curTotal2",'class':"bodyBold"} );
	
	// now we just wait for the save or cancel buttons
	Quote = get_quote(); 
	curTotal(); 
} 
function fillDiscount() { // when clicked, we fill all discount fields with new discount
	var els = document.forms['editPage'].elements;
	var newDiscount = document.forms['editPage'].newDiscount.value;
	if (newDiscount == '' ) return;
	if (newDiscount > 100) { // oops, the word discount was not clear...
		document.getElementById('errDiscount').innerHTML = "Discount must be less than 100%";
	} else { 
		document.getElementById('errDiscount').innerHTML = "";
	}
	// this could be a zero, so allow that
	for (var i =0;i< els.length; i++) {
		if ( /^SalesDiscount/.test(els[i].id) ) els[i].value = newDiscount;
	}
	// call the refresh total here?
	curTotal();
}
function fivecells(tr) { for (i=0;i<4;i++) { createTag(tr,"td",{'class':'bodyBold'}).innerHTML="&nbsp;";}}
function numonly (ele,which) { //alert(ele.value);
	var a = ele.value; 
	var illegalChars = /\D/; // allow numbers
  	if ( illegalChars.test(a) ) { 
		alert (' The '+which+' field accepts numbers only '); 
		ele.value = ''; 
		return false;
	}
	return true;
}
</script> <!-- page 2 of wizard -->
<script language="javascript" type="text/javascript">
function doSave() { // called when it's time to save
	var lines = new Array(); 
	var sawerror = 0;
	try { 	
		for (key = 0; key< Selected.length; key++) { 
		
			var l = new Sforce.Dynabean("SFDC_520_QuoteLine__c");	
			var lkid = Selected[key].get("Id");
		
			l.set("Product2__c",lkid) ;
			l.set("Quote__c","{!SFDC_520_Quote__c.Id}");
					
			var elementid = "Quantity"+lkid;
			var units = document.forms['editPage'].elements[elementid].value;
			if (!units) { // error msg
				document.forms['editPage'].elements[elementid].er.innerHTML = 
				"Error: You must enter a value";
				sawerror++;
			} else { 
				document.forms['editPage'].elements[elementid].er.innerHTML = '';
				//assert(units); 
				l.set("Qty_Ordered__c",units); 
			}
			
			var elementid = "UnitPrice"+lkid;
			var uprice = document.forms['editPage'].elements[elementid].value;
			if (!uprice) { // error msg
				document.forms['editPage'].elements[elementid].er.innerHTML = 
				"Error: You must enter a value";
				sawerror++;
			} else { 
				document.forms['editPage'].elements[elementid].er.innerHTML = '';
				//assert(uprice); 
				l.set("Unit_Price__c",uprice); 
			}
		
			var elementid = "Description"+lkid;
			var desc = document.forms['editPage'].elements[elementid].value;
			if ( desc != null ) { 
				l.set("Description__c",desc); 
			} else { 
				l.fieldsToNull.push('Description__c');
			}
			
			var elementid = "SalesDiscount"+lkid;
			var sdics = document.forms['editPage'].elements[elementid].value;
			if ( sdics > 0 ) {
				l.set("Sales_Discount__c",sdics); 
			} else { // must null it out
				l.fieldsToNull.push('Sales_Discount__c');
			}
			
			var elementid = "ServiceDate"+lkid;
			var sdate = document.forms['editPage'].elements[elementid].value;
			if (sdate) { 
				l.set("ServiceDate__c", Sforce.Util.ParseDate(sdate) ); }
			
			if ( has_multicurrency) {
				l.set("CurrencyIsoCode",Currency);
			}
			lines.push(l);
		} 
		if (sawerror>0) { return false; } // keep them on this page
		if (lines.length>0) { 
			var sr = sforceClient.Create(lines);
			if (sr.className != "SaveResults" ) { 
				alert("could not create record with data provided \n"+ sr.toString() );
			}
		}
	} catch ( e) { alert("Could not create quote lines \n"+e); }
	
	// update the quote amount also !! since we have the math here and saves the user 
	// clicking on the custom link later.
	// value is in -> quoteCurrTotal (always), use that to write Quote_Amount__c
	var upd = new Sforce.Dynabean("SFDC_520_Quote__c");
	upd.set("Id","{!SFDC_520_Quote__c.Id}");
	upd.set("Quote_Amount__c",quoteCurrTotal);
	if ( has_multicurrency) {
		upd.set("CurrencyIsoCode",Currency);
	}
	upd.save();
	
	jumpbackQuote(); 
	return true;
} 
function assert(fact,msg) { if ( fact ) { return true } 
	msg = "Assert failure \n" + msg
	if (arguments.callee.caller != null) { 
		msg = msg + " in function "+ arguments.callee.caller.toString().match(/function\s+(\w+)/)[1];
	} 
	alert(msg);
	return false
} 
function next() {
	if (Page*maxProdsPerPage < Query.records.length) { Page += 1; }
	if (! verifyCheckedWarning(document.forms['dispatch'], 'ids', newpgMsg) ) { return false; }
	var tbody = document.getElementById("list_tbody");	clear_table(tbody);
	draw_prods(Products);
}
function prev() {
	if ( Page > 0 ) { Page -= 1;} 
	if (! verifyCheckedWarning(document.forms['dispatch'], 'ids', newpgMsg) ) { return false; }
	var tbody = document.getElementById("list_tbody");	clear_table(tbody);
	draw_prods(Products);
}
function next_prev() {
	var ele = document.getElementById('nextprev');
	if (  Query.records.length < maxProdsPerPage ) { 
		ele.innerHTML = "";
		return; 
	}
	// if Page == 1, don't show prev
	var pre = "<a href=\"#\" onclick=\"prev();\">&lt;Previous Page</a>";
	var nxt = "<a href=\"#\" onclick=\"next();\">Next Page&gt;</a>";
	if (Page == 0) { pre = "&lt;Previous Page"; }
	if ((Page+1)*maxProdsPerPage >= Query.records.length) { nxt = "Next Page&gt;"; } 
	
	ele.innerHTML = pre + " | " + nxt + "&nbsp;&nbsp;&nbsp;&nbsp;";
} 
function sortBy(a,b) {
	if(Math.abs(sortindex)==3) { 
		var alp = grep("Product2Id",a.get("Id"), PriceBook )
		var aup = alp.get("UnitPrice"); aup = (aup?aup:"0");
		var blp = grep("Product2Id",b.get("Id"), PriceBook )
		var bup = blp.get("UnitPrice"); bup = (bup?bup:"0");
	} 
	if(Math.abs(sortindex)==4) { 
		var aa =a.get("description"); 
		var bb = b.get("description");
		if (aa == null && bb == null ) return 0;
		}
	switch (sortindex) { 
	case 1: if (a.get("Name") < b.get("Name") ) return -1 ; break;
	case -1: if (a.get("Name") > b.get("Name") ) return -1 ; break;
	case 2: if (a.get("productcode") < b.get("productcode") ) return -1 ; break;
	case -2: if (a.get("productcode") > b.get("productcode") ) return -1 ; break;
	
	// for 3 and -3 need to get currency from pricebook...
	case 3: if (aup < bup ) return -1 ; break;
	case -3: if (aup > bup ) return -1 ; break;
	
	case 4: // if the descriptions are null we need more checking
		if ( aa==null && bb) return -1; 
		if (aa && bb==null) return 1;
		if (aa < bb ) return -1 ;
		if (aa == bb ) return 0 ;
		break;
	case -4: 
		if ( aa==null && bb) return 1; 
		if (aa && bb==null) return -1;
		if (aa > bb ) return -1 ;
		if (aa == bb ) return 0 ;
		break;
	
	case 5: if (a.get("family") < b.get("family") ) return -1 ; break;
	case -5: if (a.get("family") > b.get("family") ) return -1 ; break;
	default: //alert('unknown sort index ' +sortindex);
		break;
	}
	return 1;
}

</script> <!-- insert the new lines -->
</head>
<body onload="javascript:initPage();"  class="customTab18  listPage" > 
<!-- Start page content -->
<a name="skiplink"><img src="/s.gif" height='1' width='1' 
	alt="Content Starts Here" class="skiplink"></a><div class="bPageTitle">
<div class="ptBody secondaryPalette">
	<div class="content"><img src="/s.gif" alt="Opportunity"  class="pageTitleIcon">
	<h1 class="pageType">Quote {!SFDC_520_Quote__c.Name}<span class="titleSeparatingColon">:</span></h1>
	<h2 class="pageDescription" id="pdes" >Product Selection</h2>
	<!--  --> <br >
	<!-- <div class="blank">&nbsp;</div>
	-->
	</div>
</div> <!-- end ptBody -->
<div class="bDescription" id="descript">Enter your keyword and filter criteria and click 
Find to begin your search. Search results include all records that match 
both your keyword and filter entry.</div>
<div id="pagebody" > <!-- div this so we can clear it out for page 2 -->
<h3>Find Products in <span id="pbname"></span></h3>
<TABLE cellSpacing=0 cellPadding=1 width="100%" border=0>

<form  action="" id="pSearch" name="pSearch" method="" >

<input type="hidden" name="addTo" id="find_addTo" value="">
<input type="hidden" name="numFilters" id="find_numFilters" value="1">
<input type="hidden" name="retURL" id="find_retURL" value="">
<input type="hidden" name="save_new_url" id="find_save_new_url" value="">
<tr>
<td class="productsTab">
<img alt="" src="/s.gif" width="1" height="1"></td></tr>
<tr><td><img alt="" src="/s.gif" width="1" height="1"></td></tr>

<tr><td bgcolor="#dddddd"><B><label for="addPSearch">By Keyword</label></B></td></tr>
<TR><TD bgcolor="#dddddd"> 
		<input  value="" maxlength="80" type="text" id="addPSearch" size="20" 
		onkeydown="return handleKeyDown_addP(event);"
		name="addPSearch">
    </TD>
</TR> 

<tr><td bgcolor="#dddddd"><B>By Field Filter</B></td></tr>
<TR><TD bgcolor="#dddddd"> <table><tr><td >

<select  title="Field 1" id="col0" name="col0">
<option value="">--None--</option>
<option value="Name">Product Name</option>
<option value="productcode">Product Code</option>
<option value="unitprice">List Price</option>

</select></td><td >

<select  title="Operator 1" id="oper0" name="oper0">
<option value="">--None--</option>
<option value="e">equals</option>
<option value="c">contains</option>
<option value="n">not equal to</option>
<option value="s">starts with</option>
<option value="z">ends with</option>

</select></td><td >
	<input  maxlength="80" type="text" title="Value 1" 
		onkeydown="return handleKeyDown_addP(event);"
		id="fval0" size="20" name="fval0"></td></tr></table>
        </TD>
   </TR> 
   <TR> <TD bgcolor="#dddddd">
		<input value="Find Product"  class="btn" type="button" title="Find Product" 
		onclick="findProduct();" name="find">
		&nbsp;&nbsp;&nbsp;<span id="manyproducts"></span>
        </TD>
   </TR> 

   <TR> <TD bgcolor="#dddddd"><!-- row below the find button button   -->
        </TD>
   </TR> 

<TR><!-- blank row just above main table area -->
	<TD id="nextprev" align="RIGHT" >&nbsp;</TD>
</TR>
</form>
</TABLE>
</div> <!-- end pagebody -->
<!--<br> Begin ListElement -->

<!-- motif: Opportunity -->
<div class="bNext"><div class="withFilter"><div class="clearingBox"></div></div></div>
<!-- WrappingClass -->
<div class="listOpportunity" id="listOpportunity" >
<div class="bPageBlock secondaryPalette">
 <form  id="dispatch" name="dispatch" >	
	<div class="pbHeader">
		<div class="buttons">
		<input value="Select" class="btn" title="Select" 
			onclick="return doSelect()" 
			name="edit" type="button">&nbsp;
		<input value="Cancel" class="btn" title="Cancel" onclick="jumpbackQuote();"
			name="cancel" type="button">
		</div>  <!--  buttons -->
	</div> <!--  pbHeader -->
	<div class="pbBody">
		<table class="list" border="0" cellpadding="0" cellspacing="0">
	
		<tbody id="list_tbody" >
	<!-- all produtcs list out here -->
		</tbody></table>
	
	<div class="pbInnerFooter"><div class="buttons">
		<input value="Select" class="btn" title="Select" 
			onclick="return doSelect()" 
			name="edit" type="button">&nbsp;
		<input value="Cancel" class="btn" title="Cancel" 
			name="cancel" type="button" 
			onclick="jumpbackQuote();" >
	</div> <!-- inner footer -->
	</div> <!-- pbBody -->
 </form>
</div> <!-- bPageBlock -->

<div class="pbFooter secondaryPalette"><div class="bg"></div></div>

</div> <!-- listOpportunity -->

<div class="listElementBottomNav"></div>
<!-- End ListElement -->
<!-- End page content 
</td>
</tr>
</table>
-->
</body>
</html>