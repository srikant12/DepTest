<apex:page controller="PartnerPortalWelcomeController" sidebar="false" showHeader="false">
<!--  Don't Edit unless you're familiar with CSS and JavaScript -->

<script type="text/javascript">

// please don't touch. used for the partner lead inbox.
var lead_id = "{!$CurrentPage.parameters.lead_id}";
if(lead_id != null && lead_id != ""){
    window.top.top.top.top.top.top.top.top.location.href="/"+lead_id;
}

// dates used for marketing event dates so events are always in the future during your demo
var date1 = '{!TODAY() - 7}';
var date2 = '{!TODAY() + 5}';
var date3 = '{!TODAY() + 17}';
</script>

<!--  Don't Edit the Style tags unless you're familiar with CSS -->
<!--  Start Style Tags -->
<style>
#container {
    /* uncomment and edit this section if your customer's web site layout has a fixed width.
    If you edit this section, you also need to specify a fixed width for the header table in your customer portal header HTML file.
    margin-left:auto;margin-right:auto;
    width:850px;
    */
}
#title {
    float:left;
    padding:0 0 10px 20px;
    font-size:1.5em;
    font-weight:normal;
}
#welcome {
    width:100%;
    margin-top:5px;
}
.welcome_marketingheaderimage {
    width:30%;
    padding:10px 0;
}
.welcome_marketingheaderimage img {
    display:block;
    _text-align:center;
    text-align:center;
    margin-left:auto; margin-right:auto;
}
.welcome_marketingheadertext {
    font-size:1em;
    font-weight:bold;
    padding:5px 0;
}
.welcome_marketingbodytext {
    padding-right:15px;
    text-align:left;
    vertical-align:top;
    font-size:0.9em;
    line-height:1.5em;
}
.welcome_marketingbodytext ul {
    padding:0;
    margin:0;
    border:0;
}
.welcome_bodytext ul li {
    line-height:1.5em;
    padding-left:10px;
    border:0;
}
#components {
    padding-top:10px;
}
#components img {
    display:block;
    float:left;
    padding-top:1px;
    padding-right:5px;
}
span {
    display:block;
    padding-top:2px;
    font-size:1em;
}
.clearfloats {
    clear:both;
}
.bPageBlock .pbHeader { /*Header section*/
        padding: 4px;
        
            -webkit-border-top-left-radius: 6px;
            -moz-border-radius-topright: 6px;
            -webkit-border-top-right-radius: 6px;
        box-shadow: 0px 2px 6px #ccc;
        -moz-border-radius-topleft:6px;
        -moz-border-radius-topright:6px;
        border-left:1px solid #C1C1C1;
        border-right:1px solid #C1C1C1;
        border-top:1px solid #C1C1C1;
    }
    .bPageBlock .pbBody {
        -moz-border-radius-bottomleft:6px;
        -moz-border-radius-bottomright:6px;
        background:none repeat scroll 0 0 white;
        border-bottom:1px solid #C1C1C1;
        border-left:1px solid #C1C1C1;
        border-right:1px solid #C1C1C1;
        background-color:#EAEAEA;
    }
    .bPageBlock, .individualPalette .bPageBlock {
        background:none repeat scroll 0 0 transparent;
        border:medium none;
        background-color:#FFFFFF;
    }

</style>
<!--  End Style Tags -->


<!-- Start Container to hold other layout div tags. Used to switch between fixed and liquid layouts. -->
<div id="container">

<div id="title">
<!-- Start Title. Edit this title if your prospect calls their portal something different. -->
{!$Organization.Name} Partner Portal
<!-- End Title. -->
</div>

<div class="clearfloats"/>

<!--  start table to show the welcome marketing messages. If you don't want to show this, remove from this tag to where it says "End Table to show Welcome Marketing Messages"  -->
<apex:pageBlock >
<table id="welcome_table">

<!--  start table row for the welcome graphics -->
<tr>

<td class="welcome_marketingheaderimage">
<!-- start image for the left column. If you need to edit this, replace the existing static resource in the Salesforce UI -->
<apex:image value="{!$Resource.PartnerPortalWelcome_MarketingHeaderImageLeft}" />
<!-- end image for the left column. -->
</td>

<td class="welcome_marketingheaderimage">
<!-- start image for the center column. If you need to edit this, replace the existing static resource in the Salesforce UI -->
<apex:image value="{!$Resource.PartnerPortalWelcome_MarketingHeaderImageCenter}" />
<!-- end image for the center column. -->
</td>

<td class="welcome_marketingheaderimage">
<!-- start image for the right column. If you need to edit this, replace the existing static resource in the Salesforce UI -->
<apex:image value="{!$Resource.PartnerPortalWelcome_MarketingHeaderImageRight}" />
<!-- end image for the right column. -->
</td>

</tr>
<!--  end table row for the welcome graphics -->

<!--  start table row for the welcome header text -->
<tr>

<td class="welcome_marketingheadertext">
<!-- start header text for left column. Edit text here if you want to change the title showing below the image in the UI -->
Tools You Can Use
<!-- end header text for left column. Edit text here if you want to change the title showing below the image in the UI -->
</td>

<td class="welcome_marketingheadertext">
<!-- start header text for center column. Edit text here if you want to change the title showing below the image in the UI -->
Partner News & Events
<!-- end header text for center column. Edit text here if you want to change the title showing below the image in the UI -->
</td>

<td class="welcome_marketingheadertext">
<!-- start header text for right column. Edit text here if you want to change the title showing below the image in the UI -->

Product Spotlight

<!--  uncomment the line below if you want to show Popular Ideas instead of Product Spotlight
Popular Ideas
 -->

<!-- end header text for right column. Edit text here if you want to change the title showing below the image in the UI -->
</td>

</tr>
<!--  end table row for the welcome header text -->

<!--  start table row for the welcome body text -->
<tr>

<td class="welcome_marketingbodytext">
<!-- start body text for left column. Edit text here if you want to change the marketing messaging below the message headers in the UI -->
Register your deals, access the latest sales and marketing tools to make you more successful, and share your ideas with our partner community.
<br/>
<!-- end body text for left column. Edit text here if you want to change the marketing messaging below the message headers in the UI -->
</td>

<td class="welcome_marketingbodytext">
<!-- start body text for center column. Edit text here if you want to change the marketing messaging below the message headers in the UI -->
<ul>
    <li><script>document.writeln(date1.substring(0,10));</script> : Indirect Deal Volume up 50% in Q2</li>
    <li><script>document.writeln(date2.substring(0,10));</script> : Gold Partner Golf Tournament</li>
    <li><script>document.writeln(date3.substring(0,10));</script> : Macbook Air Giveaway</li>
</ul>
<!-- end body text for center column. Edit text here if you want to change the marketing messaging below the message headers in the UI -->
</td>
<td class="welcome_marketingbodytext">
 
    <ul>
    <li>Product X : The latest in our classic line.</li>
    <li>Product Y : Our premium product.</li>
    <li>Product Z : An alternative to our classic product.</li>
    </ul>
<!-- 

Comment out the Product Spotlight markup above to show Popular Ideas in your portal instead of a Product Spotlight section

<apex:dataList value="{!PopularIdeas}" var="idea">
<apex:outputLink value="/ideas/viewIdea.apexp?id={!idea.Id}" target="_top">{!idea.Title}</apex:outputLink> (<b><apex:outputText value="{!idea.Category}" /></b>)
</apex:dataList>

-->
</td>

</tr>
<!--  end table row for the welcome body text -->

</table></apex:pageBlock>
<!--  end table to show the welcome marketing messages. -->

<div class="clearfloats"/>

<!--  Start components visualforce code -->
<div id="components">

<!-- Start Lead Inbox. If you do not want to display Lead Inbox in your portal, remove this section -->
<!--
    Notes:
    If you want to take out a column from this table, delete it below. It looks like this: <apex:column >some other tags</apex:column>
    If you want to add columns to this table with other standard or custom fields, you need to:
        1) add an <apex:column > tag for it with the correct merge field. Use the existing column markup for examples.
        2) add this field to the SOQL select query in the controller. It should look something like this: LeadInbox = [select id,Name...etc]; You need to add the api name for this field.

<apex:pageBlock title="Partner Analytics">
    <iframe src="/apex/googlecharts" width="100%" height="220px" frameborder="0" scrolling="no"/>
</apex:pageBlock>
-->
<apex:pageBlock title="Sales Analytics">
	<table width="100%">
	<td>
	<apex:image value="{!leadurl}" rendered="{!IF(leadurl == null, false, true)}"/>
	</td>
	<td> 
	<apex:image value="{!mapURL1}" rendered="{!IF(mapURL2 == null, false, true)}"/>
	</td>
	<td>
	<apex:image value="{!mapURL3}" rendered="{!IF(mapURL3 == null, false, true)}"/>
	</td>
	
	</table>
</apex:pageBlock>

<apex:form >
<apex:pageBlock title="Lead Inbox">
<apex:image id="messageIcon" value="{!$Resource.icon_information}" rendered="{!NOT(ShowLeadInbox)}" /> <span><apex:outputText value="{!LeadInboxMessage}" rendered="{!NOT(ShowLeadInbox)}"></apex:outputText></span>
    
<apex:actionStatus id="status" startText="Loading..."/>

<apex:pageBlockTable value="{!LeadInbox}" var="lead" rendered="{!ShowLeadInbox}" >
<apex:column >
           <apex:outputField value="{!lead.Name}" />
           <apex:facet name="header">Lead Name</apex:facet>
           </apex:column>
           <apex:column >
           <apex:outputField value="{!lead.Title}" />
           <apex:facet name="header">Title</apex:facet>
           </apex:column>
           <apex:column >
           <apex:outputField value="{!lead.Company}" />
           <apex:facet name="header">Company</apex:facet>
           </apex:column>
           <apex:column >
           <apex:outputField value="{!lead.LeadSource}" />
           <apex:facet name="header">Lead Source</apex:facet>
           </apex:column>
           <apex:column >
<apex:commandButton immediate="true" value="Accept Lead" action="{!AcceptLead}" reRender="redirect" status="Loading...">
<apex:param name="LeadId" value="{!lead.id}" />
</apex:commandButton>
</apex:column>
</apex:pageBlockTable>
</apex:pageBlock>

</apex:form>

<!--  End Lead Inbox. If you do not want to display Lead Inbox in your portal, remove this section -->

<!-- Start Approval Requests. If you do not want to display Approval Requests in your portal, remove this section -->
<!-- 
    Notes:
    If you want to take out a column from this table, delete it below. It looks like this: <apex:column >some other tags</apex:column>
    If you want to add columns to this table with other standard or custom fields, you need to:
        1) add an <apex:column > tag for it with the correct merge field. Use the existing column markup for examples.
        2) add this field to the SOQL select query in the controller. It should look something like this: Solution = [select id,SolutionName...etc]; You need to add the api name for this field.
 -->
 
 
<apex:pageBlock title="Approval Requests">

    <apex:image id="messageIcon" value="{!$Resource.icon_information}" rendered="{!NOT(ShowApprovalRequests)}" /> <span><apex:outputText value="{!ApprovalRequestsMessage}" rendered="{!NOT(ShowApprovalRequests)}"></apex:outputText></span>
      <apex:pageBlockTable value="{!ApprovalRequests}" var="req" rendered="{!ShowApprovalRequests}">
           <apex:column ><apex:outputLink value="/{!req.pi.ProcessInstance.TargetObjectId}" target="_top">{!req.TargetObjectType}</apex:outputLink>
           <apex:facet name="header">Related To</apex:facet>
           </apex:column>
           <apex:column ><apex:outputLink value="/{!req.pi.ProcessInstance.TargetObjectId}" target="_top">{!req.TargetObjectName}</apex:outputLink>
           <apex:facet name="header">Name</apex:facet>
           </apex:column>
           <apex:column >
           <apex:facet name="header">Submitted Date</apex:facet>
           {!req.SubmittedDate}
           </apex:column>
           <apex:column >
           <apex:facet name="header">Status</apex:facet>
           {!req.pi.ProcessInstance.Status}
           </apex:column>
       </apex:pageBlockTable>
       
</apex:pageBlock>

<!-- End Approval Requests. If you do not want to display Approval Requests in your portal, remove this section -->


<!-- Start Popular Solutions. If you do not want to display Solutions in your portal, remove this section -->
<!--
    Notes:
    If you want to take out a column from this table, delete it below. It looks like this: <apex:column >some other tags</apex:column>
    If you want to add columns to this table with other standard or custom fields, you need to:
        1) add an <apex:column > tag for it with the correct merge field. Use the existing column markup for examples.
        2) add this field to the SOQL select query in the controller. It should look something like this: Solution = [select id,SolutionName...etc]; You need to add the api name for this field.
<apex:pageBlock title="Popular Solutions">

    <apex:image id="messageIcon" value="{!$Resource.icon_information}" rendered="{!NOT(ShowTopSolutions)}" /> <span><apex:outputText value="{!TopSolutionsMessage}" rendered="{!NOT(ShowTopSolutions)}"></apex:outputText></span>
      <apex:pageBlockTable value="{!TopSolutions}" var="solution" rendered="{!ShowTopSolutions}">
           <apex:column ><apex:outputLink value="/{!solution.Id}" target="_top">{!solution.SolutionName}</apex:outputLink>
           <apex:facet name="header">Solution Name</apex:facet>
           </apex:column> 
           <apex:column >
           <apex:outputField value="{!solution.TimesUsed}" />
           <apex:facet name="header">Cases Solved</apex:facet>
           </apex:column>
           
       </apex:pageBlockTable>
       
</apex:pageBlock>

--> 
<!-- End Popular Solutions. If you do not want to display Solutions in your portal, remove this section -->


</div>
<!--  End components visualforce code -->

</div>
<!-- End Container to hold other layout div tags. Used to switch between fixed and liquid layouts. -->


</apex:page>