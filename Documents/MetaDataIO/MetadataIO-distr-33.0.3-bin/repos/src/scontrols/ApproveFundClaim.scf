<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Approve Fund Claim</title>
<link  href="/dCSS/Theme2/default/common.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
<link  href="/dCSS/Theme2/default/custom.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
<link  href="/dCSS/Theme2/default/common.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" >
<link  href="/css/assistive.css" type="text/css" media="aural,braille,embossed" rel="stylesheet" >
<style type="text/css" media="screen">div.visible { display: visible; } div.hidden { display: none; } </style>
<div id="JavaScriptEnabled" class="visible">
<br><table width="100%"><tr><td align=center><span class="moduleTitle">Updating ... Please Wait</span></td></tr>
<tr><td>&nbsp;</td></tr><tr><td align=center><img src="/img/waiting_dots.gif" border="0" width=156 height=34></td></tr>
</table>
</div>
<script src="https://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js" type="text/javascript"></script>
<script language="JavaScript" src="{!Scontrol_URL}"></script>
</head>
<body class=" LookupResultsFrame">
<script type="text/javascript"> 
//This is called from a fund claim form and changes the claim status to "approved". It also registers an entry in the channel budget. It is not vaid for claims that already have an "approved" status.
<!-- 
/* Configuration value used to determine if budgets should be used 
You could also just make the budget field required and remove this value */
var bFundUseBudget = true;	

//Starting values that may be changed should the user edit them on the intermediate entry page
var budgetID = "{!SFDC_MDF_Claim_SFDC_Channel_Budget_ID}";
var approvedAmountValue = convertToNumber("{!SFDC_MDF_Claim_Approved_Amount}");

//Build the page 
reSizeWindow();
drawUpdating();
writeFieldSection();

//called from onLoad(). Connects to the sforceClient
function startup() { 
	// get session id and initialize the sforceClient object 
	sforceClient.init("{!API_Session_ID}", "{!API_Partner_Server_URL_60}"); 
	//check everything is ok 
	if (sforceClient.getSessionId().indexOf("!API_Session_ID") != -1) { 
		return false; 
	} else { 
		//Uncomment to have a debug window display with comments/ errors etc
		//showDebug();
		return true; 
	} 
} 

//called from onLoad().  
function initializeForm() { 
	var retVal = true;
	var amountMissingMessage = "Note: The approved amount defaults to the " +  getFieldLabel("Requested_Amount__c", "SFDC_MDF_Claim__c");
	retVal = genericInitializeForm(	"{!SFDC_MDF_Claim_Requested_Amount}",
									"{!SFDC_MDF_Claim_Approved_Amount}",
									"Approved_Amount__c",
									amountMissingMessage,
									"{!SFDC_MDF_Claim_SFDC_Channel_Budget_ID}", 
									true,
									"SFDC_MDF__c",
									"{!SFDC_MDF_Claim_MDF_ID}",
									"SFDC_Channel_Budget__c", 
									"SFDC_MDF_Claim__c");
	if (retVal == false) {
		//The form requires information. Show some other fields to provide context to the user.
		var fieldsList = new Array("Name", "MDF__c", "Requested_Amount__c");
		var fieldsValues= new Array("{!SFDC_MDF_Claim_Name}", "{!SFDC_MDF_Claim_MDF}", "{!SFDC_MDF_Claim_Requested_Amount}");

		var budgetName;
		if ("{!SFDC_MDF_Claim_SFDC_Channel_Budget}" == ""){
			//There is no budget at the claim level. See if the parent has a budget id, and from there get the name
			if (budgetID != "") {
				//A budget id was assigned, Get its name from the checkbook
				var idArray = new Array(budgetID);
				var budgetArray = sforceClient.Retrieve("Id, Name","SFDC_Channel_Budget__c",idArray);
				budgetName = budgetArray[0].get("Name");
			}
		} else {
			budgetName = "{!SFDC_MDF_Claim_SFDC_Channel_Budget}";
		}

		if(document.getElementById("budget").className == 'hidden') {
			fieldsList[fieldsList.length] = "SFDC_Channel_Budget__c";
			fieldsValues[fieldsValues.length] = budgetName;
		}
		if(document.getElementById("approvedAmount").className == "hidden") {
			fieldsList[fieldsList.length] = "Approved_Amount__c";
			fieldsValues[fieldsValues.length] = "{!SFDC_MDF_Claim_Approved_Amount}";
		}
		showFormContextFields(fieldsList, fieldsValues, "SFDC_MDF_Claim__c");
		document.getElementById("divErrorMsg").innerHTML = validationPageErrorHeader;
	}
	return retVal;
}

//this is the main function
function main() { 
	/* 	This function does several things
		1. Creates a budget entry (if the budget is being used)
		2. Updates the budget balances (if the budget is being used)
		3. Updates the record status*/
	
	debug("start main()");
	var retVal = true;
	if (bFundUseBudget)	{
		//Create the entry using the budget id
		var cbFields = new Array();
		var cbValues = new Array();
		cbFields.push("Date__c");
		cbValues.push(new Date()); 
		cbFields.push("Source_Record_ID__c");
		cbValues.push("{!SFDC_MDF_Claim_ID}"); 
		cbFields.push("Source_Record_Name__c");
		cbValues.push("{!SFDC_MDF_Claim_Name}"); 
		cbFields.push("Requestor__c");
		cbValues.push("{!SFDC_MDF_Claim_CreatedBy}"); 
		cbFields.push("Approver__c");
		cbValues.push("{!User_FirstName}" + " " + "{!User_LastName}"); 
		cbFields.push("Approver_Email__c");
		cbValues.push("{!User_Email}"); 
		cbFields.push("Approved_Claim__c");
		cbValues.push(approvedAmountValue);
		cbFields.push("Channel_Budget__c");
		cbValues.push(budgetID); 
		if (createBudgetEntry(cbFields, cbValues)) {
			//Update the budget Approved Claims Balance
			tableName = "SFDC_Channel_Budget__c";
			selectFields = new Array("id","Approved_Claims__c");
			constrainColumns = new Array("id");
			constrainValues = new Array(budgetID);
			var queryResult=getRecords(buildSelectStatement(tableName, selectFields, constrainColumns, constrainValues)); 
			var oldVal = parseFloat(convertToNumber(queryResult.records[0].get("Approved_Claims__c")));
			var approvedVal =  parseFloat(approvedAmountValue);
			var newValue = parseFloat(oldVal + approvedVal);
			var fieldNames = new Array("Approved_Claims__c");
			var fieldValues = new Array(newValue.toString());
			var saveResults=updateFields(queryResult.records[0], fieldNames, fieldValues);	
			if (saveResults == null)
				alert("Error updating budget balances.");	
		} else {
			alert("Error creating budget entry.");	
		} 			
	}
		
	//Update record status, approved amount, approved date, and budget id
	var tableName = "SFDC_MDF_Claim__c";
	var selectFields = new Array("id","Status__c", "Approved_Amount__c", "Date_Approved__c");
	if (bFundUseBudget) 
		selectFields.push("SFDC_Channel_Budget__c");
	var constrainColumns = new Array("id");
	var constrainValues = new Array("{!SFDC_MDF_Claim_ID}");
	var queryResult =getRecords(buildSelectStatement(tableName, selectFields, constrainColumns, constrainValues)); 
	var fieldNames = new Array("Status__c", "Approved_Amount__c", "Date_Approved__c");
	var fieldValues = new Array("Approved", approvedAmountValue, new Date());
	if (bFundUseBudget) {
		fieldNames.push("SFDC_Channel_Budget__c");
		fieldValues.push(budgetID);
	}
	var saveResults=updateFields(queryResult.records[0], fieldNames, fieldValues);
	if (saveResults == null) {
		retVal = false;
		alert("Error updating record");	
	}
	if (retVal == true)
		opener.location.reload(); 
}

function save() {
	genericSave(true, true);
}

setTimeout("onLoad();",2); 
-->
</script>
</body>
</html>