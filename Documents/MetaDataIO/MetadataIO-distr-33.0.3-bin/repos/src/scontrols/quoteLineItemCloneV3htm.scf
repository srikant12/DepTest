<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html> <head> 
<title></title> 
<script src="http://www.salesforce.com/services/lib/ajax/beta3.3/sforceclient.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript"> 
<!--- 
Sforce.DescribeSObjectResult.prototype.getCloneFields = function() {
	var out = new Array();
	for (key in this.fieldMap.getKeys()) {
		if (this.fieldMap.getItem(key).updateable  == true ||
			this.fieldMap.getItem(key).createable   == true )  {	
			out.push( this.fieldMap.getItem(key).name );
		}
	}
	//alert(" createable/updateable fields : "+out.join(","))
	return out.join(",");
}
var retUrl = "/{!SFDC_520_Quote__c.Id}";
function jumpback(n) { 
	if (n) retUrl = n;
	window.parent.parent.location.href = retUrl; 
} 
function listlines(quoteid,flds) { 
	var soql = "select " + flds +
		" from SFDC_520_QuoteLine__c where Quote__c = '"+quoteid+"'";
	// alert(soql);
	var qlines = sforceClient.Query( soql);
	// alert(qlines.toString()); 
	if (qlines.className != "QueryResult") { 
		alert("query record id failed : " + qlines.toString()) ; 
		return null; 
	}
	if ( qlines.records.length < 0) { 
		alert("no detail lines " + qlines.toString() + soql); 
		return null;
		}
	return qlines.records;
}
function initPage() {
	sforceClient.useCookies = true;
	//sforceClient.registerInitCallback(setup);
	sforceClient.init("{!API.Session_ID}", "{!API.Partner_Server_URL_60}", true); 
	setTimeout("setup()",100);
}
// the following is broken up to allow the page to show waiting dots...
var src; 
function setup() { 
	var qbean = new Sforce.Dynabean("SFDC_520_Quote__c");
	var qfields = qbean.definition.getCloneFields(); // list the editable fields , skip the read only
	var soql = "select Id," + qfields + " from SFDC_520_Quote__c where id = '{!SFDC_520_Quote__c.Id}'";
//	alert('soql: '+soql)
	
	var queryResult = sforceClient.Query(soql); 
	if ( queryResult < 1 || queryResult.className != 'QueryResult') { 
		alert ( 'no quote found?') ;return;
	}
	src = queryResult.records[0];
	setTimeout("clone_quote()",100);
}
var dest; var qlines;
function clone_quote() { 

	// get a list of related detail items 
	var qlbean = new Sforce.Dynabean("SFDC_520_QuoteLine__c");
	var qlfields = qlbean.definition.getCloneFields(); // list the editable fields , skip the read only
	if(!qlfields) { alert("no editable fields found on quote lines object"); jumpback(); return;}
	qlines = listlines( src.get("Id"), qlfields);
	// really should be ok if there are no related records...
	/*if (!qlines || !qlines[0] ) {	alert("quote has no related records");
	} else { alert("found quote detail lines :" + qlines[0].toString() );
	} 
	*/
	// make the new stage say "Draft" 
	src.set("Approval_Stage__c","Draft");
	src.set("Primary__c",0);
	dest = clone(src); // create the quote
	if (!dest) jumpback();
	setTimeout("quote_lines()",100);
}

function quote_lines() { 	
	if (qlines.length>0 ) { 
		for (key in qlines) {	// map the new quote lines pointing to the new quote
			qlines[key].set("Quote__c",dest.id);
		}
		
		var dst = sforceClient.Create(qlines);
		if (dst.className != "SaveResults" || dst[0].success == 'false' ) { 
			alert("could not create record with data provided \n"+ 	dst.toString() );
			jumpback(); 
		}
	}
	// jump to the new quote record
	jumpback("/" + dest.id);
	return;
} 

// wrapper around create a single record
function clone(src) { // returns one record
	var dst = sforceClient.Create([src])[0];
	/* dst has className, errors, id , success */
	if (dst.className != "SaveResult" || dst.success == 'false' ) { 
		alert("could not create record with data provided \n"+ 
			dst.toString() );
		return null;
	}
	return dst;
}
-->
</script> 
</head> 

<body onload="javascript:initPage()"> 
<center>
<br><br><br>
<SPAN STYLE=" font-size: 75%; font-family: 'Arial', 'Helvetica', sans-serif;"> 
Please wait, cloning quote number: {!SFDC_520_Quote__c.Name} ... 
</span><br><br>
<img src="/img/waiting_dots.gif" alt="Please wait..." title="Please wait..." height="20" width="196">
</center>
</body> 
</html>